# -*- coding: utf-8 -*-
"""
Created on Fri Nov 27 21:48:25 2020

@author: Owner
"""

■ 1. 대화식 모드로 프로그래밍하기

*파이썬을 실행하는 방법 2가지
	1. 대화식 모드 :  한라인 한라인씩 실행하는 모드
	2. 배치모드 : 여러개의 스크립트로 작성해서 한번에 실행하는 모드

스파이더에서 아래와 같이 스크립트를 적어주고 전체선택한 후에 ctl + enter 로 실행한 것이 배치모드이다.

a=1
b=2
print(a+b)


문제 1. 아래의 스크립트를 배치모드로 실행하시오!
for i in [1,2,3,4,5,6,7]:
print(i)



■ 2. 텍스트 에디터로 프로그래밍하기
spyder와 같은 텍스트 창에서 프로그램 코드를 작성하는 것을 말한다.
spyder 프로그램에서 ctl + enter 키로 코드를 실행하거나 F5 를 누르면 실행된다.

문제2. 아래와 같은 결과가 나오게 spyder에서 프로그래밍 하시오!

2
3
4

for i in [2,3,4]:
print i

■ 3. 변수명 만들기
"어떤 값을 임시로 저장하는 변수의 이름을 만드는 방법과 규칙을 배웁니다."


예 : a=1
설명 : a 라는 변수에 숫자 1을 할당한다.

※ 변수이름을 생성할 때 주의사항
	1. 변수 이름에는 다음 문자만 사용할 수 있습니다.
	- 소문자(a~z)
	- 대문자(A~Z)
	- 숫자(0~9)
	- 언더스코어(_)
	2. 변수 이름은 숫자로 시작할 수 없습니다. (문자로 시작해야합니다.)
	3. 예약어를 사용할 수 없습니다. (예약어 : 파이썬에서 이미 사용되고 있는 단어)
	
	예 : True, False, class, is, return
	
	
문제3. 파이썬의 예약어가 무엇이 있는지 확인하시오!
import keyword
print (keyword.kwlist)


문제4. 위의 예약어를 변수로 사용하면 에러가 나는지 직접 테스트 하시오
and = 1
SyntaxError : invalid syntax


■ 4. 변수에 값 대입하기
	- 다양한 값을 변수에 대입하는 방법을 배웁니다.
	- 파이썬은 변수에 값을 대입할 때 = (assingment) 기호를 사용합니다.

예제 : 
a=1
b='SCOTT'
print(b)

다른 프로그램 언어에서는 아래와 같이 좀 더 복잡한 코드로 작성해야한다.

b=varchar2(10) := 'scott';

파이썬 코드는 심플함을 철학으로 삼고 있습니다.
파이썬이 기본 철학을 확인하는 방법

import this

파이썬은 c/c++, java와는 달리 변수를 선언할 때 숫자형 자료인지 문자형 자료인지 선언해주지 않아도 됩니다.

문제5. 변수의 자료형을 확인하시오
b='scott'
print(b)
print(type(b)) # <class 'str'>

문제6. 숫자형 변수의 자료형을 확인하시오
a=2
print(type(a)) # <class 'int'>

■ 5. 주석 처리하기(#)

프로그램에서 주석부분은 인터프리터에 의해 무시되는 텍스트의 한 부분입니다. 
코드를 설명하거나 나중에 어떤 문제를 고치기 위해 표시하는 등 다양한 목적으로 주석을 사용할 수 있습니다.
코드를 작성할 때 주석을 잘 작성해두면 차후에 코드를 다시 보거나 타인이 코드를 검토할 때 매우 중요한 정보로 활용이 될 수 있습니다.
그래서 주석을 항상 달아주는 습관을 가지는 것이 좋습니다.

예제 :
	1. 한줄 주석
a=1 # 변수 a에 숫자 1을 할당합니다.
print(a) # a의 결과를 출력합니다.

	2. 여러줄 주석
""" 아래의 프로그램은 a 변수에 1을 할당해서 프린트 하는 프로그램 입니다. """
a=1
print(a)

■ 6. 자료형 개념 배우기

*파이썬에서 자주 다루게 되는 자료형이 5가지가 있습니다.

	1. 숫자형 자료형 : 숫자를 표현하는 자료형
	예 : a=1
	2. 문자형 자료형 : 문자를 표현하는 자료형
	예 : b='scott'
	3. 리스트 자료형 : [ ] 대괄호 안에 임의 객체를 순서있게 나열한 자료형
	예 : d=[1,2,3] #파이썬은 시작을 0부터 시작합니다.
		print(d)
		print(d[0]) # d리스트에서 첫번째 요소를 프린트해라!

	4. 튜플 자료형 : 리스트와 비슷하지만 요소값을 변경할 수 없다는 것이 특징인 자료형
	예 : c=(1,2,3)
		print( c)
		print(c[0])
		
	5. 사전 자료형 : 사전 자료형은 { } 중괄호 안의 키 : 값으로 된 쌍이 요소로 구성된 순서가 없는 자료형입니다.
	예 : m = { 'i' : '나는', 'am' : '입니다.', 'boy' : '소년'}
		print(m)
		

■ 7. 자료형 출력 개념 배우기(print)

"print 함수를 이용하면 자료형을 화면에 출력할 수 있습니다."


문제7. 아래의 리스트에서 문자 k를 출력하시오!
mmm = ['a','b','d','e','k','m','n','z']
	print(mmm[4])



문제8. 동전을 던져서 앞면이 나오는지 뒷면이 나오는지 확인하시오!
import random #random 이라는 모듈을 이 코드에서 쓰겠다.
                                         ->  특정 목적으로 만든 파이썬 코드의 집합
coin = ['앞면', '뒷면']
	print (random.choice(coin))

문제9. (점심시간문제) 위에서는 동전을 던졌는데 이번에는 주사위를 던져서 주사위의 눈이 뭐가 나오는지 확인하는 파이썬 코드를 작성하시오!
dice = [1,2,3,4,5,6]
	print (random.choice(dice))




■ 8. 들여쓰기 개념 배우기

파이썬에는 실행코드 부분을 묶어주는 ( ) 괄호가 없습니다.
들여쓰기로 괄호를 대신합니다.
파이썬은 다른 프로그래밍 언어와 달리 if, for, while 등과 같은 제어문, 루프문의 실행코드 부분을 구분해주는 괄호가 없습니다. 
대신 들여쓰기로 괄호를 대신합니다.
파이썬에서 제어문이나 함수이름, 클래스 이름 뒤에 콜론(:) 으로 제어문, 함수이름, 클래스이름의 끝을 표시하며 콜론 (:) 다음에 실행코드를 작성하는데 이때 들여쓰기를 해야합니다. 

예제1. 실행코드를 다음라인에 작성했을 경우
listdata = ['a', 'b', 'c'] # listdata 라는 변수로 리스트를 생성
if 'a' in listdata: #listdata 리스트 변수에 'a' 요소가 있다면 아래의
    print('a가 listdata에 있습니다.')   # 실행문을 실행하시오.

예제2. 실행코드를 한 라인에 작성한 경우
listdata = ['a', 'b', 'c']
if 'a' in listdata: print ('a가 listdata 에 있습니다.')

※ 설명 : 콜론(:}으로 if 문의 끝을 알린다.

문제10. 점심시간에 했던 주사위의 눈이 6개 있는 변수를 만들고 if 문을 써서 주사위의 눈에 숫자 5가 있습니다. 라는 메시지가 출력되게 하시오!
import random
dice = [1,2,3,4,5,6]
if '5' in dice: 
	print('주사위의 눈에 숫자 5가 있습니다.')

문제11. 위의 코드를 수정해서 숫자를 물어보게하고 숫자를 입력하면 위의 메시지가 출력되게 하시오!
a = int( input('숫자를 입력하세요~'))

dice = [1,2,3,4,5,6]
if a in dice:
    print('주사위의 눈에 숫자 ',a,' 가 있습니다.')
